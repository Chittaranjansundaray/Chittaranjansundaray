# -*- coding: utf-8 -*-
"""Assingment of Data Science

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aWh22HmudbH8YSlje16T05lqEauLJ01m
"""

import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
df=pd.read_csv("/content/data.csv")
df

df.columns

df.head()

df.shape

df.corr()

df.isnull().sum()

df.describe

df['Cyclone_Inlet_Gas_Temp'][2470:2472]

df['Cyclone_Inlet_Gas_Temp'].unique()

df.loc[df['Cyclone_Material_Temp'] == "I/O Timeout"]
#df.loc[df['Cyclone_Inlet_Gas_Temp']=="Unit Down"]

df.loc[df['Cyclone_Material_Temp'] == "I/O Timeout"].replace('I/O Timeout','1',inplace=True)

#df.loc[df['Cyclone_Material_Temp'] == "Unit Down"]

df.loc[df['Cyclone_Inlet_Gas_Temp'] == "I/O Timeout"]

#Cyclone_Inlet_Gas_Temp
#df.loc[df['Cyclone_Material_Temp'] == "Unit Down"].replace('Unit Down','',inplace=True)
df["Cyclone_Material_Temp"].replace({"Unit Down": "9999", "I/O Timeout": "9999","Not Connect":"9999","Scan Timeout":"9999",
                                     "Configure":"9999","Comm Fail":"9999"}, inplace=True)

#pd.to_numeric(df['Cyclone_Inlet_Gas_Temp'],I/O Timeout='float')
pd.to_numeric(df["Cyclone_Material_Temp"], downcast='float')

#Cyclone_Material_Temp 

df["Cyclone_Inlet_Gas_Temp"].replace({"Unit Down": "9999", "I/O Timeout": "9999","Not Connect":"9999","Scan Timeout":"9999",
                                     "Configure":"9999","Comm Fail":"9999"}, inplace=True)

pd.to_numeric(df["Cyclone_Inlet_Gas_Temp"], downcast='float')

#Cyclone_Outlet_Gas_draft 
df["Cyclone_Outlet_Gas_draft"].replace({"Unit Down": "9999", "I/O Timeout": "9999","Not Connect":"9999","Scan Timeout":"9999",
                                     "Configure":"9999","Comm Fail":"9999"}, inplace=True)

pd.to_numeric(df["Cyclone_Outlet_Gas_draft"], downcast='float')

#Cyclone_cone_draft 
df["Cyclone_cone_draft"].replace({"Unit Down": "9999", "I/O Timeout": "9999","Not Connect":"9999","Scan Timeout":"9999",
                                     "Configure":"9999","Comm Fail":"9999"}, inplace=True)

pd.to_numeric(df["Cyclone_cone_draft"], downcast='float')

#Cyclone_Gas_Outlet_Temp 
df["Cyclone_Gas_Outlet_Temp"].replace({"Unit Down": "9999", "I/O Timeout": "9999","Not Connect":"9999","Scan Timeout":"9999",
                                     "Configure":"9999","Comm Fail":"9999"}, inplace=True)

pd.to_numeric(df["Cyclone_Gas_Outlet_Temp"], downcast='float')

#Cyclone_Inlet_Draft
df["Cyclone_Inlet_Draft"].replace({"Unit Down": "9999", "I/O Timeout": "9999","Not Connect":"9999","Scan Timeout":"9999",
                                     "Configure":"9999","Comm Fail":"9999"}, inplace=True)

pd.to_numeric(df["Cyclone_Inlet_Draft"], downcast='float')

df.columns

df1=df[df['time']=='Cyclone_Inlet_Gas_Temp']
df2=df[df['time']=='Cyclone_Material_Temp']
df3=df[df['time']=='Cyclone_Outlet_Gas_draft']
df4=df[df['time']=='Cyclone_cone_draft']
df5=df[df['time']=='Cyclone_Gas_Outlet_Temp']
df6=df[df['time']=='Cyclone_Inlet_Draft']

plt.scatter(df1['Cyclone_Inlet_Gas_Temp'],df1['Cyclone_Material_Temp'],color='blue',marker='*')
plt.scatter(df2['Cyclone_Inlet_Gas_Temp'],df2['Cyclone_Material_Temp'],color='red',marker='.')
plt.xlabel('Cyclone_Inlet_Gas_Temp')
plt.ylabel('Cyclone_Material_Temp')
plt.show()

df.head(3)

df['TEST'].unique()

df['TEST'].value_counts()

df_bkup=df.copy()

df=df[['Cyclone_Inlet_Gas_Temp', 'Cyclone_Material_Temp',
       'Cyclone_Outlet_Gas_draft', 'Cyclone_cone_draft',
       'Cyclone_Gas_Outlet_Temp', 'Cyclone_Inlet_Draft']]

df.head(3)

X = df.values

pca = PCA(n_components=1,svd_solver= 'full')

len(df)

principalComponents = pca.fit_transform(X)

principalComponents

pca.explained_variance_ratio_

principalDf = pd.DataFrame(data = principalComponents
             , columns = ['principal component 1'])#, 'principal component 2'])

plt.plot(principalDf["principal component 1"], "*")

